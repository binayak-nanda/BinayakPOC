CREATE COMPUTE MODULE MapMQOutToCommonEvent
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE outputRootRef REFERENCE TO OutputRoot;
		DECLARE inputRootRef REFERENCE TO InputRoot;
        DECLARE inputMQMDRef REFERENCE TO InputRoot.MQMD;
        DECLARE inputPropRef REFERENCE TO InputRoot.Properties;

        DECLARE envRef REFERENCE TO Environment;
        
        CALL StoreInputRoot(inputRootRef, envRef);
        CALL LoadProperties(envRef);
        
        -- SET envRef.Variables.Log.CurrentLogPoint = LogPoint; -- Taken from promoted UDP.
       
        SET Environment.Variables.QBE.ESBEvent.Event.Role = 'info';
        
        DECLARE eventRef REFERENCE TO Environment.Variables.QBE.ESBEvent.Event;
        
        CALL MapCommonInfoToCommonEvent(envRef, inputPropRef, outputRootRef);

		SET eventRef.EventSource.UserId VALUE             = inputMQMDRef.UserIdentifier;
		SET eventRef.MessageContext.MessageId             = inputMQMDRef.MsgId;
		SET eventRef.MessageContext.CorrelationId         = inputMQMDRef.CorrelId;
		SET eventRef.MessageContext.Destination.Transport = 'mq';	
		SET eventRef.MessageContext.Destination.Name      = inputMQMDRef.SourceQueue;
		SET eventRef.MessageContext.Destination.Type      = 'queue';

	    /* Copy the message body if it exists. */
--		IF (CARDINALITY(InputBody.*[]) > 0) THEN
--			-- EVAL('SET ' || 'OutputRoot.' || FIELDNAME(InputBody) || ' = InputBody;');
--			SET OutputRoot.{FIELDNAME(InputBody)} = InputBody;
--		END IF;
 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;