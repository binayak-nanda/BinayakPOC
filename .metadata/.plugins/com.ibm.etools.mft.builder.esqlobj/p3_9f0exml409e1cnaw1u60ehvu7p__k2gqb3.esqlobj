/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		
		SET OutputRoot.Properties = InputRoot.Properties;

		SET OutputRoot.Properties.MessageSet      = Environment.Variables.Context.MessageSet;
		SET OutputRoot.Properties.MessageType     = Environment.Variables.Context.MessageType;
		SET OutputRoot.Properties.MessageFormat   = Environment.Variables.Context.MessageFormat;

		SET OutputRoot.MQMD = InputRoot.MQMD;
		CREATE FIELD OutputRoot.MQMD; -- just in case the input isn't MQ
	
		-- The reason for the RFH2 header is because broker will parse the message correctly
		-- from mq with this setting. It will write the message settings in the property to mq
		-- and on reading the message it will parse the message into the correct format.
		SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
		SET OutputRoot.MQRFH2C = InputRoot.MQRFH2C;
		IF NOT (EXISTS(OutputRoot.MQRFH2[]) OR EXISTS(OutputRoot.MQRFH2C[])) THEN
			-- Create one
			CREATE FIELD OutputRoot.MQRFH2C;
		END IF;
		
		--DO not change this without changing PAYMENT!!!
		IF FIELDNAME(Environment.Variables.Context.XMLNS) IS NOT NULL THEN
			SET OutputRoot.XMLNS = Environment.Variables.Context.XMLNS;
		END IF;
		IF FIELDNAME(Environment.Variables.Context.XMLNSC) IS NOT NULL THEN
			SET OutputRoot.XMLNSC = Environment.Variables.Context.XMLNSC;
		END IF;
		IF FIELDNAME(Environment.Variables.Context.MRM) IS NOT NULL THEN
--			LOG EVENT VALUES ('Using Environment.Variables...');
			SET OutputRoot.MRM = Environment.Variables.Context.MRM;
		END IF;				


		--Add other message types here..
	    IF FIELDNAME(InputLocalEnvironment.WrittenDestination.MQ) IS NOT NULL THEN
			-- The context message should have the same MsgId as the _written_ message
			SET OutputRoot.MQMD.MsgId = InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId;
			-- The matching on the MQGet will match correlId
			SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.WrittenDestination.MQ.DestinationData.replyIdentifier;
	    ELSE
	    	SET OutputRoot.MQMD.MsgId = CAST(SUBSTRING(InputLocalEnvironment.WrittenDestination.JMS.DestinationData.JMSMessageID FROM 4) AS BLOB);
	    	SET OutputRoot.MQMD.CorrelId = OutputRoot.MQMD.MsgId;
	    	SET OutputRoot.Properties.ReplyIdentifier = OutputRoot.MQMD.CorrelId;
	    END IF;
	    
		RETURN TRUE;
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	
