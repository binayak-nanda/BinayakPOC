CREATE COMPUTE MODULE Test_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		CALL CopyMessageHeaders();
		
	    DECLARE envRef REFERENCE TO Environment;

 		/*************************************************************************************
         Preserve the content of RFH2 header if exists in the incoming message
         otherwise, we bring across the MQMD.format to newly created MQRFH2.format
        ***************************************************************************************/
        IF InputRoot.MQRFH2 IS NOT NULL THEN
	       SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;
        ELSE
	       SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = InputRoot.MQMD.Format;
        END IF;

        /* Populate MQRFH2 for additional information */
        SET OutputRoot.MQRFH2.ESBEvent = envRef.Variables.QBE.ESBEvent;
 	 	
 	 	DECLARE cursor REFERENCE TO InputBody;
 	 	
 	 	IF LASTMOVE(cursor) = TRUE THEN
 	 	  -- EVAL('SET ' || 'OutputRoot.' || FIELDNAME(InputBody) || ' = InputBody;');
 	 	  SET OutputRoot.{FIELDNAME(InputBody)} = InputBody;
 	 	END IF;
			
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;